{"version":3,"sources":["pin.png","store/global-error/global-error.actions.js","store/initialised/initialised.actions.js","store/fetching/fetching.actions.js","store/selectedPoint/selectedPoint.actions.js","store/sdk/sdk.actions.js","store/params/params.reducer.js","store/store.js","store/sdk/sdk.reducer.js","store/params/params.actions.js","store/global-error/global-error.reducer.js","store/initialised/initialised.reducer.js","store/selectedPoint/selectedPoint.reducer.js","store/fetching/fetching.reducer.js","map/renderer.js","map/index.js","App.js","Visualization.js","index.js"],"names":["module","exports","setGlobalError","value","type","setInitialised","setFetching","setSelectedItems","setSDK","params","rootReducer","combineReducers","SDK","state","action","installation","instance","selectedParams","globalError","initialised","selectedPoint","isFetching","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","darkStyles","GoogleApiWrapper","props","apiKey","connect","setValue","dispatch","getState","a","field","error","length","data","keyword","location","lat","lng","locationName","locationAddress","mapZoom","theme","gestureHandling","mapTypeControl","scaleControl","zoomControl","streetViewControl","rotateControl","fullscreenControl","google","draggable","useState","showInfo","changeShow","marker","setActiveMarker","position","setPosition","useEffect","newPosition","toLowerCase","zoom","parseInt","containerStyle","width","height","minHeight","style","center","initialCenter","styles","maps","StyledMapType","onClick","onDragend","e","latLng","mapCenter","icon","url","pin","anchor","Point","scaledSize","Size","visible","onClose","color","className","address","setAddress","onChange","onSelect","geocodeByAddress","then","results","getLatLng","catch","console","getInputProps","suggestions","getSuggestionItemProps","placeholder","searchPlaceholderText","map","suggestion","active","backgroundColor","cursor","description","title","App","message","Warning","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","Boolean","Visualization","values","setValues","fetch","json","res","content","err","fetchData","vse","getUrl","Container","Render","VisualizationRender","urlParams","hash","vars","hashes","href","slice","indexOf","split","i","push","getUrlVars","ReactDOM","render","document","getElementById","init","getValue","frame","startAutoResizer","form","onReadOnlyChange","readOnly"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,iC,4LCE9BC,EAAiB,SAAAC,GAAK,MAAK,CACtCC,KAH8B,mBAI9BD,UCFWE,EAAiB,SAAAF,GAAK,MAAK,CACtCC,KAH6B,kBAI7BD,UCFWG,EAAc,SAAAH,GAAK,MAAK,CACnCC,KAH0B,eAI1BD,UCEWI,EAAmB,SAAAJ,GAAK,MAAK,CACxCC,KAHgC,qBAIhCD,UCDWK,EAAS,SAAAL,GAAK,MAAK,CAC9BC,KAHqB,UAIrBD,UCPK,IAAMM,EAAS,CACpB,OAAU,GACV,MAAS,OACT,sBAAyB,qBCMpB,IAAMC,EAAcC,YAAgB,CACzCC,ICVK,WAA2C,IAAvBC,EAAsB,uDAAd,KAAMC,EAAQ,uCAC/C,OAAOA,EAAOV,MACZ,IHCmB,UGAjB,OAAOU,EAAOX,MAChB,QACE,OAAOU,IDMXJ,ODLK,WAAsD,IAAhCI,EAA+B,uDAAvBJ,EAAuB,yCAAdL,EAAc,EAAdA,KAAMD,EAAQ,EAARA,MAClD,OAAQC,GACN,IGVsB,aHUtB,MACoCD,GAAS,GAApCY,EADT,EACSA,aAAcC,EADvB,EACuBA,SACfC,EAAc,eAAOF,EAAP,GAAwBC,GAE5C,OAAO,eAAIH,EAAX,GAAqBI,GACvB,QACE,OAAOJ,ICFXK,YGZK,WAAmD,IAAvBL,EAAsB,uDAAd,KAAMC,EAAQ,uCACvD,OAAQA,EAAOV,MACb,ITJ4B,mBSK1B,OAAOU,EAAOX,MAChB,QACE,OAAOU,IHQXM,YIbK,WAAoD,IAAxBN,EAAuB,wDAARC,EAAQ,uCACxD,OAAQA,EAAOV,MACb,ITJ2B,kBSKzB,OAAOU,EAAOX,MAChB,QACE,OAAOU,IJSXO,cKZK,WAAmD,IAArBP,EAAoB,uDAAZ,GAAIC,EAAQ,uCACvD,OAAQA,EAAOV,MACb,IRF8B,qBQG5B,OAAOU,EAAOX,MAChB,QACE,OAAOU,ILQXQ,WMfK,WAAiD,IAAxBR,EAAuB,wDAARC,EAAQ,uCACrD,OAAQA,EAAOV,MACb,IVJwB,eUKtB,OAAOU,EAAOX,MAChB,QACE,OAAOU,MNaPS,EAAkBC,OAAOC,sCAAwCC,IAE1DC,EAAQC,YACnBjB,EACAY,EAAgBM,YAAgBC,O,wDOlB5BC,EAAa,CACjB,CACE,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,qBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,iBACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,yBACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,6BACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,0BACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,MACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,qBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,gBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,gBACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,iCACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,aACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,UACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,cAgIFC,8BACb,SAACC,GAAD,MAAY,CACRC,OAAQD,EAAMC,UAFLF,CAIVG,YACH,KACA,CACEC,SVvToB,SAAAhC,GAAK,8CAAI,WAAOiC,EAAUC,GAAjB,mBAAAC,EAAA,+DACjBD,IAAPzB,EADwB,EACxBA,IADwB,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","file":"static/js/main.9d428a41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pin.a5f9bad3.png\";","export const SET_GLOBAL_ERROR = 'SET_GLOBAL_ERROR';\n\nexport const setGlobalError = value => ({\n  type: SET_GLOBAL_ERROR,\n  value\n});","export const SET_INITIALISED = 'SET_INITIALISED';\n\nexport const setInitialised = value => ({\n  type: SET_INITIALISED,\n  value\n});\n","export const SET_FETCHING = 'SET_FETCHING';\n\nexport const setFetching = value => ({\n  type: SET_FETCHING,\n  value\n});","import {setFetching} from '../fetching/fetching.actions';\nimport {setInitialised} from '../initialised/initialised.actions';\nimport {setGlobalError} from '../global-error/global-error.actions';\n\nexport const SET_SELECTED_POINT = 'SET_SELECTED_POINT';\n\nexport const setSelectedItems = value => ({\n  type: SET_SELECTED_POINT,\n  value\n});\n\nexport const setValue = value => async (dispatch, getState) => {\n  const {SDK} = getState();\n\n  try {\n    await SDK.field.setValue(value);\n  } catch (e) {\n    const error = e && e.length && e[0].data && e[0].data.keyword;\n    dispatch(setGlobalError(error || 'Could not set value'));\n  }\n};\n\nexport const getValues = () => async (dispatch, getState) => {\n  const state = getState();\n  const {SDK, params} = state;\n\n  try {\n    if (!params.apiKey) {\n      dispatch(setInitialised(true));\n\n      return dispatch(setGlobalError('Google api key is required'));\n    }\n\n    dispatch(setFetching(true));\n\n    const value = await SDK.field.getValue();\n\n    dispatch(setSelectedItems(value));\n\n    dispatch(setFetching(false));\n    dispatch(setInitialised(true));\n  } catch (e) {\n    console.error('could not load', e);\n    dispatch(setFetching(false));\n    dispatch(setInitialised(true));\n    dispatch(setGlobalError('Could not get selected point'));\n  }\n};","import {init} from 'dc-extensions-sdk';\nimport {setGlobalError} from '../global-error/global-error.actions';\nimport {setInitialised} from \"../initialised/initialised.actions\";\nimport {setParams} from \"../params/params.actions\";\nimport {getValues} from \"../selectedPoint/selectedPoint.actions\"\nexport const SET_SDK = 'SET_SDK';\n\nexport const setSDK = value => ({\n  type: SET_SDK,\n  value\n});\n\nexport const fetchSDK = () => async (dispatch, getState) => {\n  let {SDK} = getState();\n\n  try {\n    if (SDK) {\n      return SDK;\n    }\n\n    SDK = await init();\n\n    dispatch(setSDK(SDK));\n\n    dispatch(setParams(SDK.params));\n\n    dispatch(getValues());\n\n    SDK.frame.startAutoResizer();\n    SDK.form.onReadOnlyChange(readOnly => {\n      dispatch(setSDK({...SDK, form: {...SDK.form, readOnly}}))\n    })\n  }\n  catch (e) {\n    console.error('Failed to load', e);\n    dispatch(setInitialised(true));\n    dispatch(setGlobalError('Could not get SDK'));\n  }\n\n\n  return SDK;\n};","import {SET_PARAMS} from \"./params.actions\";\n\nexport const params = {\n  \"apiKey\": \"\",\n  \"theme\": \"Dark\",\n  \"searchPlaceholderText\": \"Search Places ...\"\n};\n\nexport function paramReducer(state = params, {type, value}) {\n  switch (type) {\n    case SET_PARAMS:\n      const {installation, instance} = (value || {});\n      const selectedParams = {...installation, ...instance};\n\n      return {...state, ...selectedParams};\n    default:\n      return state;\n  }\n}\n","import thunkMiddleware from 'redux-thunk';\n\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\n\nimport {sdkReducer} from './sdk/sdk.reducer';\nimport {paramReducer} from './params/params.reducer';\nimport {globalErrorReducer} from './global-error/global-error.reducer';\nimport {initialisedReducer} from './initialised/initialised.reducer';\nimport {selectedPointReducer} from './selectedPoint/selectedPoint.reducer';\nimport {fetchingReducer} from './fetching/fetching.reducer';\n\nexport const rootReducer = combineReducers({\n  SDK: sdkReducer,\n  params: paramReducer,\n  globalError: globalErrorReducer,\n  initialised: initialisedReducer,\n  selectedPoint: selectedPointReducer,\n  isFetching: fetchingReducer,\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\n","import { SET_SDK } from \"./sdk.actions\";\n\nexport function sdkReducer(state = null, action) {\n  switch(action.type) {\n    case SET_SDK:\n      return action.value;\n    default:\n      return state;\n  }\n}","export const SET_PARAMS = 'SET_PARAMS';\n\nexport const setParams = params => ({\n  type: SET_PARAMS,\n  value: params\n});\n\n","import { SET_GLOBAL_ERROR } from './global-error.actions';\n\nexport function globalErrorReducer(state = null, action) {\n  switch (action.type) {\n    case SET_GLOBAL_ERROR:\n      return action.value;\n    default:\n      return state;\n  }\n}","import { SET_INITIALISED } from \"./initialised.actions\";\n\nexport function initialisedReducer(state = false, action) {\n  switch (action.type) {\n    case SET_INITIALISED:\n      return action.value;\n    default:\n      return state;\n  }\n}","import {\n  SET_SELECTED_POINT,\n} from './selectedPoint.actions';\n\nexport function selectedPointReducer(state = {}, action) {\n  switch (action.type) {\n    case SET_SELECTED_POINT:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\n\n\n\n","import { SET_FETCHING } from \"./fetching.actions\";\n\nexport function fetchingReducer(state = false, action) {\n  switch (action.type) {\n    case SET_FETCHING:\n      return action.value;\n    default:\n      return state;\n  }\n}","import React, {useState, useEffect} from 'react';\nimport {GoogleApiWrapper, InfoWindow, Map, Marker} from 'google-maps-react';\nimport {setValue} from '../store/selectedPoint/selectedPoint.actions';\nimport {connect} from 'react-redux';\nimport pin from '../pin.png';\n\nconst darkStyles = [\n  {\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#343333'\n      }\n    ]\n  },\n  {\n    'elementType': 'labels.icon',\n    'stylers': [\n      {\n        'visibility': 'off'\n      }\n    ]\n  },\n  {\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#757575'\n      }\n    ]\n  },\n  {\n    'elementType': 'labels.text.stroke',\n    'stylers': [\n      {\n        'color': '#212121'\n      }\n    ]\n  },\n  {\n    'featureType': 'administrative',\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#454545'\n      }\n    ]\n  },\n  {\n    'featureType': 'administrative.country',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#9e9e9e'\n      }\n    ]\n  },\n  {\n    'featureType': 'administrative.land_parcel',\n    'stylers': [\n      {\n        'visibility': 'off'\n      }\n    ]\n  },\n  {\n    'featureType': 'administrative.locality',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#bdbdbd'\n      }\n    ]\n  },\n  {\n    'featureType': 'poi',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#757575'\n      }\n    ]\n  },\n  {\n    'featureType': 'poi.park',\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#181818'\n      }\n    ]\n  },\n  {\n    'featureType': 'poi.park',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#616161'\n      }\n    ]\n  },\n  {\n    'featureType': 'poi.park',\n    'elementType': 'labels.text.stroke',\n    'stylers': [\n      {\n        'color': '#1b1b1b'\n      }\n    ]\n  },\n  {\n    'featureType': 'road',\n    'elementType': 'geometry.fill',\n    'stylers': [\n      {\n        'color': '#454545'\n      }\n    ]\n  },\n  {\n    'featureType': 'road',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#8a8a8a'\n      }\n    ]\n  },\n  {\n    'featureType': 'road.arterial',\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#454545'\n      }\n    ]\n  },\n  {\n    'featureType': 'road.highway',\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#3c3c3c'\n      }\n    ]\n  },\n  {\n    'featureType': 'road.highway.controlled_access',\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#4e4e4e'\n      }\n    ]\n  },\n  {\n    'featureType': 'road.local',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#7e7e7e'\n      }\n    ]\n  },\n  {\n    'featureType': 'transit',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#757575'\n      }\n    ]\n  },\n  {\n    'featureType': 'water',\n    'elementType': 'geometry',\n    'stylers': [\n      {\n        'color': '#181919'\n      }\n    ]\n  },\n  {\n    'featureType': 'water',\n    'elementType': 'labels.text.fill',\n    'stylers': [\n      {\n        'color': '#3d3d3d'\n      }\n    ]\n  }\n];\n\nconst MapRenderer = (props) => {\n  const {\n    location: {\n      lat = 0,\n      lng = 0\n    },\n    locationName = '',\n    locationAddress = '',\n    mapZoom = '17',\n    theme = 'Dark',\n    gestureHandling = 'none',\n    mapTypeControl = false,\n    scaleControl = false,\n    zoomControl = false,\n    streetViewControl = false,\n    rotateControl = false,\n    fullscreenControl = false,\n    google,\n    draggable,\n    setValue\n  } = props;\n  const [showInfo, changeShow] = useState(false);\n  const [marker, setActiveMarker] = useState(null);\n  const [position, setPosition] = useState({\n    lat,\n    lng\n  });\n\n  useEffect(() => {\n    const newPosition = {\n      lat: props.location.lat,\n      lng: props.location.lng\n    };\n    setPosition(newPosition);\n\n    draggable && setValue(newPosition)\n\n  }, [props, draggable, setValue]);\n\n  return (\n    <Map\n      gestureHandling={gestureHandling.toLowerCase() || 'none'}\n      mapTypeControl={mapTypeControl}\n      scaleControl={scaleControl}\n      zoomControl={zoomControl}\n      streetViewControl={streetViewControl}\n      rotateControl={rotateControl}\n      fullscreenControl={fullscreenControl}\n      zoom={parseInt(mapZoom, 10)}\n      containerStyle={draggable ? {\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n        minHeight: '400px'\n      }: {}}\n      style={{\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n        minHeight: '400px'\n      }}\n      center={{\n        lat: lat,\n        lng: lng\n      }}\n      initialCenter={{\n        lat: lat,\n        lng: lng\n      }}\n      styles={theme === 'Dark' ? darkStyles : [new google.maps.StyledMapType()]}\n      onClick={() => {\n        changeShow(false);\n        setActiveMarker(null);\n      }}\n      google={google}\n    >\n      <Marker\n        draggable={draggable}\n        onDragend={(props, marker, e) => {\n          setPosition({\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng(),\n          });\n\n          draggable && setValue({\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng(),\n          })\n        }}\n        position={position}\n        mapCenter={position}\n        icon={{\n          url: pin,\n          anchor: new google.maps.Point(24, 24),\n          scaledSize: new google.maps.Size(48, 48)\n        }}\n        onClick={(props, marker) => {\n          changeShow(!showInfo);\n          setActiveMarker(!showInfo ? marker : null);\n        }}\n      />\n\n      {locationName || locationAddress ? (<InfoWindow\n        marker={marker}\n        visible={showInfo}\n        onClose={() => {\n          changeShow(false);\n          setActiveMarker(null);\n        }}\n        style={{\n          color: '#616161'\n        }}\n      >\n        <div>\n          <h1 className=\"title\">{locationName}</h1>\n          <p className=\"description\">{locationAddress}</p>\n        </div>\n      </InfoWindow>) : null}\n    </Map>\n  );\n};\n\nexport default GoogleApiWrapper(\n  (props) => ({\n      apiKey: props.apiKey,\n    }\n  ))(connect(\n  null,\n  {\n    setValue\n  })(MapRenderer))\n\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {GoogleApiWrapper} from \"google-maps-react\";\nimport MapRenderer from './renderer';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nconst MapComponent = ({\n                        initialised,\n                        apiKey,\n                        selectedPoint,\n                        params\n                      }) => {\n  const [address, setAddress] = useState('');\n  const [position, setPosition] = useState({\n    lat: selectedPoint.lat,\n    lng: selectedPoint.lng\n  });\n\n  return initialised ? (\n    <>\n      <PlacesAutocomplete\n        value={address}\n        onChange={(address) => setAddress(address)}\n        onSelect={(address) => {\n          setAddress(address);\n          geocodeByAddress(address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => {\n              setPosition({\n                lat: latLng.lat,\n                lng: latLng.lng\n              })\n            })\n            .catch(error => console.error('Error', error));\n        }}\n      >\n        {({getInputProps, suggestions, getSuggestionItemProps}) => {\n          return (<div className=\"auto-wrapper\">\n            <input\n              {...getInputProps({\n                placeholder: params.searchPlaceholderText || 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                const style = suggestion.active\n                  ? {backgroundColor: '#efeef4', cursor: 'pointer'}\n                  : {backgroundColor: '#ffffff', cursor: 'pointer'};\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>);\n        }}\n      </PlacesAutocomplete>\n      <span className=\"close\" title=\"Clear\" onClick={() => {\n        setAddress('');\n        setPosition({\n          lat: 0,\n          lng: 0\n        })\n      }\n      }/>\n      <MapRenderer\n        theme={params.theme.toLowerCase() === 'light' ? 'Light' : 'Dark'}\n        location={position}\n        apiKey={apiKey}\n        mapZoom={\"17\"}\n        draggable={true}\n        gestureHandling={'auto'}\n        mapTypeControl={false}\n        scaleControl={false}\n        zoomControl={true}\n        streetViewControl={false}\n        rotateControl={true}\n        fullscreenControl={false}\n      />\n    </>) : null;\n};\n\nexport default GoogleApiWrapper(\n  (props) => ({\n      apiKey: props.apiKey,\n    }\n  ))(connect(\n  state => ({\n    selectedPoint: state.selectedPoint,\n    SDK: state.SDK,\n    initialised: state.initialised,\n    params: state.params\n  })\n)(MapComponent))\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {Warning} from '@material-ui/icons';\nimport {setGlobalError} from './store/global-error/global-error.actions';\nimport {Snackbar} from '@material-ui/core';\n\nimport Map from './map'\n\nconst AppComponent = params => {\n\n  const message = (\n    <span>\n      <Warning/>\n      {params.globalError}\n    </span>\n  );\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n        autoHideDuration={3000}\n        open={Boolean(params.globalError)}\n        message={message}\n      />\n      {params.params.apiKey ? (<Map apiKey={params.params.apiKey}/>) : null}\n\n    </>\n  );\n};\n\nconst App = connect(\n  state => ({\n    globalError: state.globalError,\n    params: state.params\n  }),\n  {setGlobalError}\n)(AppComponent);\n\nexport default App;\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Warning} from '@material-ui/icons';\nimport {setGlobalError} from './store/global-error/global-error.actions';\nimport {Container, Snackbar} from '@material-ui/core';\n\nimport MapWrapper from './map/renderer'\n\nconst getUrl = ({vse, content}) => {\n  return `//${vse}/content/id/${content}`;\n};\n\nconst VisualizationComponent = params => {\n  const [values, setValues] = useState({});\n  const message = (\n    <span>\n      <Warning/>\n      {params.globalError}\n    </span>\n  );\n\n  useEffect(() => {\n    async function fetchData(url) {\n      const res = await fetch(url);\n\n      res\n        .json()\n        .then(res => setValues(res.content))\n        .catch(err => params.setGlobalError(err));\n    }\n\n\n    fetchData(getUrl(params));\n  }, [params]);\n\n  return (\n    <>\n      <Container>\n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n          autoHideDuration={3000}\n          open={Boolean(params.globalError)}\n          message={message}\n        />\n      </Container>\n      {values.location ? (<MapWrapper apiKey={params.apiKey} {...values}/>) : null}\n    </>\n  );\n};\n\nconst Visualization = connect(\n  state => ({\n    globalError: state.globalError,\n  }),\n  {setGlobalError}\n)(VisualizationComponent);\n\nexport default Visualization;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {store} from './store/store';\nimport {Provider} from 'react-redux';\nimport {fetchSDK} from './store/sdk/sdk.actions';\n\nimport App from './App';\nimport Visualization from './Visualization';\n\nimport './index.css';\n\nconst Render = () => (\n  <Provider store={store}>\n    <App/>\n  </Provider>\n);\n\nconst VisualizationRender = ({vse, content, apiKey}) => (\n  <Provider store={store}>\n    <Visualization content={content} vse={vse} apiKey={apiKey}/>\n  </Provider>\n);\n\nfunction getUrlVars() {\n  var vars = [], hash;\n  var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n  for (var i = 0; i < hashes.length; i++) {\n    hash = hashes[i].split('=');\n    vars.push(hash[0]);\n    vars[hash[0]] = hash[1];\n  }\n  return vars;\n}\n\nconst urlParams = getUrlVars();\n\n\nif (urlParams[\"vse\"] && urlParams[\"content\"] && urlParams[\"apiKey\"]) {\n  ReactDOM.render(<VisualizationRender content={urlParams[\"content\"]}\n                                       apiKey={urlParams[\"apiKey\"]}\n                                       vse={urlParams[\"vse\"]}/>, document.getElementById('root'));\n} else {\n  store.dispatch(fetchSDK());\n  ReactDOM.render(<Render/>, document.getElementById('root'));\n}\n\n\n"],"sourceRoot":""}